@model Paginacion<Sistema.Models.Categoria>

@{
    ViewData["Title"] = "Index";
}

<h1>Categoria Cursos</h1>
<hr />
<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Filtro:
        </p>
        <p><input type="text" name="searchString" value="@ViewData["CurrentFilter"]" style="border-radius: 3px" />
            <input type="submit" value="Buscar" class="btn btn-danger" />
        </p>
        <hr />
        <p>
            <a asp-action="Index"> Todos los registros </a> <p>Registros Mostrados @Model.TotalR;</p>
        </p>
    </div>
</form>

<table class="table table-dark">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NombreSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Nombre</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DescripcionSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Descripcion</a>
            </th>
            <th>
                <a>Estado</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
               @Html.DisplayFor(modelItem => item.Nombre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Descripcion)
            <td>
                @Html.DisplayFor(modelItem => item.Estado)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.CategoriaID">Editar</a> |
                <a asp-action="Details" asp-route-id="@item.CategoriaID">Detalles</a> |
                <a asp-action="Delete" asp-route-id="@item.CategoriaID">Eliminar</a>
            </td>
        </tr>
}
    </tbody>
</table>

<p>
    <a asp-action="Create"><button class="btn btn-outline-primary">Nuevo</button></a>
</p>

@{ 
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-outline-danger @prevDisabled">
    Anterior
</a>

@for (int i = 1; i < Model.TotalPages; i++)
{
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-page="@i"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-danger">@i
    </a>
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-outline-danger @nextDisabled">
    Siguiente
</a>
